import testing ;
import lex ;
import option ;

if [ option.get "with-glc" ] {
  glc = ff_glc.cc string_util.cc feature-factory.cc ;
}

lib decoder : 
  forest_writer.cc
  maxtrans_blunsom.cc
  cdec_ff.cc
  cfg.cc
  dwarf.cc
  ff_dwarf.cc
  rule_lexer.ll
  fst_translator.cc
  csplit.cc
  translator.cc
  scfg_translator.cc
  hg.cc
  hg_io.cc
  decoder.cc
  hg_intersect.cc
  hg_sampler.cc
  factored_lexicon_helper.cc
  viterbi.cc
  lattice.cc
  aligner.cc
  apply_models.cc
  earley_composer.cc
  phrasetable_fst.cc
  trule.cc
  ff.cc
  ff_rules.cc
  ff_wordset.cc
  ff_context.cc
  ff_charset.cc
  ff_lm.cc
  ff_klm.cc
  ff_ngrams.cc
  ff_spans.cc
  ff_ruleshape.cc
  ff_wordalign.cc
  ff_csplit.cc
  ff_tagger.cc
  ff_source_syntax.cc
  ff_bleu.cc
  ff_factory.cc
  lexalign.cc
  lextrans.cc
  tagger.cc
  bottom_up_parser.cc
  phrasebased_translator.cc
  JSON_parser.c
  json_parse.cc
  grammar.cc
  $(glc)
  ..//utils
  ..//mteval
  ../klm/lm//kenlm
  ..//boost_program_options
  : <include>.
  : :
  <library>..//utils
  <library>..//mteval
  <library>../klm/lm//kenlm
  <library>..//boost_program_options
  <include>.
  ;

exe cdec : cdec.cc decoder ..//utils ..//mteval ../klm/lm//kenlm ..//boost_program_options ;

all_tests [ glob *_test.cc : cfg_test.cc ] : decoder : <testing.arg>$(TOP)/decoder/test_data ;

install legacy : cdec
  : <location>$(TOP)/cdec <install-type>EXE <install-dependencies>on <link>shared:<dll-path>$(TOP)/cdec <link>shared:<install-type>LIB ;

